#installation (outcomment the line below)
#!pip install easymcdm

from EasyMCDM.models.Promethee import Promethee

DecisionMatrix = {
    #  C1      C2     C3
    "A": [23817.0, 201.0, 8.0],
    "B": [25771.0, 195.0, 5.7],
    "C": [25496.0, 195.0, 7.9]
}

weight    = [1/3,    1/3,  1/3]
direction = ["min", "max", "min"]

p = Promethee(data=DecisionMatrix, verbose=True)
res = p.solve(weights=weight, prefs=direction)
print(res)

# Output
'''
Weights :  [0.3333333333333333, 0.3333333333333333, 0.3333333333333333]
Preferences :  ['min', 'max', 'min']
+----+------+------+------+------+-------+
|    |  A   |  B   |  C   |  ϕ+  |   ϕ   |
+----+------+------+------+------+-------+
| A  | 0.00 | 0.67 | 0.67 | 1.33 |  0.67 |
| B  | 0.33 | 0.00 | 0.33 | 0.67 | -0.33 |
| C  | 0.33 | 0.33 | 0.00 | 0.67 | -0.33 |
| ϕ- | 0.67 | 1.00 | 1.00 |      |       |
+----+------+------+------+------+-------+


Ranking ϕ- :
************
#1 A 	: 0.67
#2 B 	: 1.00
#3 C 	: 1.00


Ranking ϕ+ :
************
#1 A 	: 1.33
#2 B 	: 0.67
#3 C 	: 0.67


Ranking ϕ :
***********
#1 A 	: 0.67
#2 B 	: -0.33
#3 C 	: -0.33


Best ϕ- is  A  with  0.67
Best ϕ+ is  A  with  1.33
Best ϕ  is  A  with  0.67
{'phi_negative': [('A', 0.6666666666666666), ('B', 1.0), ('C', 1.0)], 
 'phi_positive': [('A', 1.3333333333333333), ('B', 0.6666666666666666), ('C', 0.6666666666666666)], 
 'phi': [('A', 0.6666666666666666), ('B', -0.33333333333333337), ('C', -0.33333333333333337)], 
 'matrix': '+----+------+------+------+------+-------+\n|    |  A   |  B   |  C   |  ϕ+  |   ϕ   |\n+----+------+------+------+------+-------+\n| A  | 0.00 | 0.67 | 0.67 | 1.33 |  0.67 |\n| B  | 0.33 | 0.00 | 0.33 | 0.67 | -0.33 |\n| C  | 0.33 | 0.33 | 0.00 | 0.67 | -0.33 |\n| ϕ- | 0.67 | 1.00 | 1.00 |      |       |\n+----+------+------+------+------+-------+'}
'''